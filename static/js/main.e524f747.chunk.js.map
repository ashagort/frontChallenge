{"version":3,"sources":["repository/index.js","Components/SearchList.js","Components/Search.js","App.js","index.js"],"names":["getSearchResult","query","a","data","axios","get","response","status","console","log","error","SearchList","searchElement","selectElement","querySearch","Fragment","href","className","onClick","name","highlightClassName","searchWords","autoEscape","textToHighlight","Search","useState","setQuery","result","setResult","statusList","setStatusList","statusIcon","setStatusIcon","filterResults","results","length","resultFilter","filter","item","includes","toLowerCase","indexOf","fetchSearchResults","resultQuery","resultsData","userSelectedOption","selection","htmlFor","data-testid","type","value","id","placeholder","onChange","event","queryTarget","target","map","element","index","renderResult","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAQO,SAAeA,EAAtB,kC,4CAAO,WAAgCC,GAAhC,iBAAAC,EAAA,4DACa,4CACdC,EAAO,GAFN,kBAKoBC,IAAMC,IAJb,6CADb,OAMqB,OADlBC,EALH,QAMUC,QACXC,QAAQC,IAAI,iBACZN,EAAO,IAEPA,EAAOG,EAASH,KAVf,uDAaHK,QAAQE,MAAR,KAAiB,iBAbd,kBAcI,IAdJ,iCAiBEP,GAjBF,0D,iDCHMQ,G,MAAa,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,cAAeC,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,YACzD,OACI,cAAC,IAAMC,SAAP,UACI,mBAAGC,KAAM,IAAT,SACJ,oBAAIC,UAAW,cAAeC,QAAS,kBAAML,EAAcD,EAAcO,OAAzE,SACI,cAAC,IAAD,CACIC,mBAAmB,cACnBC,YAAa,CAACP,GACdQ,YAAY,EACZC,gBAAiBX,EAAcO,eCPhCK,EAAS,WAAO,IAAD,EACAC,mBAAS,IADT,mBACnBxB,EADmB,KACZyB,EADY,OAEED,mBAAS,IAFX,mBAEnBE,EAFmB,KAEXC,EAFW,OAGUH,mBAAS,QAHnB,mBAGnBI,EAHmB,KAGPC,EAHO,OAIUL,mBAAS,yBAJnB,mBAInBM,EAJmB,KAIPC,EAJO,KAMpBC,EAAgB,SAACC,GACrB,GAAIA,EAAQC,OAAS,EAAG,CACtB,IAAMC,EAAiBF,EAAQG,QAAO,SAAAC,GAAI,OAAIA,EAAKnB,KAAKoB,SAAStC,OAAaiC,EAAQG,QAAO,SAAAC,GAAI,OAAIA,EAAKnB,KAAKqB,cAAcC,QAAQxC,EAAMuC,gBAAkB,KAC7JZ,EAAUQ,QAEVR,EAAU,KAIRc,EAAkB,uCAAG,WAAOC,GAAP,eAAAzC,EAAA,6DACzB8B,EAAc,yBADW,SAGChC,EAAgB2C,GAHjB,QAGnBC,EAHmB,QAKTV,SACdD,EAAcW,EAAYV,SANH,2CAAH,sDAsBlBW,EAAqB,SAACC,GAC1BpB,EAASoB,GACThB,EAAc,WACdE,EAAc,cACdJ,EAAU,KAaZ,OACM,sBAAKX,UAAW,mBAAhB,UAEI,mBAAGA,UAAW,eAAd,kDACA,sBAAKA,UAAS,+BAA0BY,GAAckB,QAAQ,eAA9D,UACI,uBACIC,cAAY,eACZC,KAAK,OACLC,MAAOjD,EACPkD,GAAG,eACHC,YAAY,sBACZC,SAxCU,SAACC,GAC3B,IAAMC,EAAcD,EAAME,OAAON,MAE5BjD,GAIHyB,EAAS6B,GACTb,EAAmBzC,KAJnByB,EAAS6B,GACT3B,EAAU,QAqCA,mBAAGX,UAAS,aAAQc,QAE1B,oBAAId,UAAW,cAAf,SAzBa,WACnB,GAAc,KAAVhB,EACF,OAAO0B,EAAO8B,KAAI,SAACC,EAASC,GAC1B,OACY,cAAC,EAAD,CAAwB/C,cAAe8C,EAAS7C,cAAegC,EAAoB/B,YAAab,GAA/E0D,MAsBxBC,S,YC/DEC,MARf,WACE,OACE,qBAAK5C,UAAU,wBAAf,SACE,cAAC,EAAD,OCLN6C,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.e524f747.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default function () {\n  return {\n    getSearchResult\n  }\n}\n\nexport async function getSearchResult (query) {\n  const searchURL = 'https://rickandmortyapi.com/api/character'\n  let data = []\n\n  try {\n    const response = await axios.get(searchURL)\n    if (response.status !== 200) {\n      console.log('Error network')\n      data = []\n    } else {\n      data = response.data\n    }\n  } catch (e) {\n    console.error(e, 'Error network')\n    return []\n  }\n\n  return data\n}\n","import React from 'react'\nimport Highlighter from 'react-highlight-words'\n\nimport './SearchList.css'\n\nexport const SearchList = ({ searchElement, selectElement, querySearch }) => {\n  return (\n      <React.Fragment>\n          <a href={'#'}>\n      <li className={'option_list'} onClick={() => selectElement(searchElement.name)}>\n          <Highlighter\n              highlightClassName=\"search_bold\"\n              searchWords={[querySearch]}\n              autoEscape={true}\n              textToHighlight={searchElement.name}\n          />\n      </li>\n          </a>\n      </React.Fragment>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { getSearchResult } from './../repository'\n\nimport './Search.css'\nimport { SearchList } from './SearchList'\n\nexport const Search = () => {\n  const [query, setQuery] = useState('')\n  const [result, setResult] = useState([])\n  const [statusList, setStatusList] = useState('wait')\n  const [statusIcon, setStatusIcon] = useState('fa-search search-icon')\n\n  const filterResults = (results) => {\n    if (results.length > 0) {\n      const resultFilter = ((results.filter(item => item.name.includes(query))) && (results.filter(item => item.name.toLowerCase().indexOf(query.toLowerCase()) >= 0)))\n      setResult(resultFilter)\n    } else {\n      setResult([])\n    }\n  }\n\n  const fetchSearchResults = async (resultQuery) => {\n    setStatusIcon('fa-search search-icon')\n\n    const resultsData = await getSearchResult(resultQuery)\n\n    if (resultsData.results) {\n      filterResults(resultsData.results)\n    }\n  }\n\n  const handleOnInputChange = (event) => {\n    const queryTarget = event.target.value\n\n    if (!query) {\n      setQuery(queryTarget)\n      setResult([])\n    } else {\n      setQuery(queryTarget)\n      fetchSearchResults(query)\n    }\n  }\n\n  const userSelectedOption = (selection) => {\n    setQuery(selection)\n    setStatusList('loading')\n    setStatusIcon('fa-spinner')\n    setResult([])\n  }\n\n  const renderResult = () => {\n    if (query !== '') {\n      return result.map((element, index) => {\n        return (\n                    <SearchList key={index} searchElement={element} selectElement={userSelectedOption} querySearch={query} />\n        )\n      })\n    }\n  }\n\n  return (\n        <div className={'search_container'}>\n            {/* Search Input */}\n            <p className={'search_title'}>Encuentra profesionales de confianza</p>\n            <div className={`search_input_content ${statusList}`} htmlFor=\"search-input\">\n                <input\n                    data-testid='search-input'\n                    type=\"text\"\n                    value={query}\n                    id=\"search-input\"\n                    placeholder=\"QuÃ© necesitas...\"\n                    onChange={handleOnInputChange}\n                />\n                <i className={`fa ${statusIcon}`}/>\n            </div>\n          <ul className={'search_list'}>\n            {renderResult()}\n          </ul>\n        </div>\n  )\n}\n","import React from 'react'\nimport { Search } from './Components/Search'\n\nimport './Styles_global/_globals.css'\nimport './AppStyle.css'\n\nfunction App () {\n  return (\n    <div className=\"habitissimo_challenge\">\n      <Search/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}